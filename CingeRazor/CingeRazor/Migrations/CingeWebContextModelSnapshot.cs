// <auto-generated />
using System;
using CingeRazor.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CingeRazor.Migrations
{
    [DbContext(typeof(CingeWebContext))]
    partial class CingeWebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CingeRazor.Models.Articulos", b =>
                {
                    b.Property<string>("Código")
                        .HasMaxLength(20);

                    b.Property<decimal>("CostoPromedio")
                        .HasColumnType("numeric(18, 4)");

                    b.Property<string>("CódigoUnidad")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("FechaCreacíon")
                        .HasColumnType("datetime");

                    b.Property<decimal>("MargenUtilida")
                        .HasColumnType("numeric(18, 8)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<bool>("PagaImpuesto");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("numeric(18, 4)");

                    b.Property<string>("TipoArticulo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Código");

                    b.HasIndex("CódigoUnidad");

                    b.HasIndex("TipoArticulo");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("CingeRazor.Models.Cedulas", b =>
                {
                    b.Property<string>("CódigoCédula")
                        .HasMaxLength(10);

                    b.Property<string>("Cédula")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CódigoCédula");

                    b.ToTable("Cedulas");
                });

            modelBuilder.Entity("CingeRazor.Models.Clientes", b =>
                {
                    b.Property<string>("Código")
                        .HasMaxLength(20);

                    b.Property<string>("Cédula")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CódigoCédula")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("CódigoZona")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Dirección")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaCreacíon")
                        .HasColumnType("datetime");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TelefonoCodigoArea")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("Teléfono")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Código");

                    b.HasIndex("CódigoCédula");

                    b.HasIndex("CódigoZona");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CingeRazor.Models.Compañia", b =>
                {
                    b.Property<string>("IdCompañia")
                        .HasMaxLength(4);

                    b.Property<string>("ApartadoPostal")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CedulaJuridica")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<string>("DireccionLogo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FacturaElectronica")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NombreCompañia")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PaginaWeb")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdCompañia");

                    b.ToTable("Compañia");
                });

            modelBuilder.Entity("CingeRazor.Models.Medidas", b =>
                {
                    b.Property<string>("CódigoUnidad")
                        .HasMaxLength(10);

                    b.Property<string>("NombreUnidad")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("CódigoUnidad");

                    b.ToTable("Medidas");
                });

            modelBuilder.Entity("CingeRazor.Models.Roles", b =>
                {
                    b.Property<string>("IdRol")
                        .HasMaxLength(50);

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CingeRazor.Models.TipoArticulos", b =>
                {
                    b.Property<string>("TipoArticulo")
                        .HasMaxLength(20);

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("TipoArticulo");

                    b.ToTable("TipoArticulos");
                });

            modelBuilder.Entity("CingeRazor.Models.Usuarios", b =>
                {
                    b.Property<string>("Usuario")
                        .HasMaxLength(50);

                    b.Property<string>("Contraseñas")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<string>("IdRol")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("UltimoLogeo")
                        .HasColumnType("datetime");

                    b.HasKey("Usuario");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CingeRazor.Models.Zonas", b =>
                {
                    b.Property<string>("CódigoZona")
                        .HasMaxLength(20);

                    b.Property<string>("NombreZona")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CódigoZona");

                    b.ToTable("Zonas");
                });

            modelBuilder.Entity("CingeRazor.Models.Articulos", b =>
                {
                    b.HasOne("CingeRazor.Models.Medidas", "CódigoUnidadNavigation")
                        .WithMany("Articulos")
                        .HasForeignKey("CódigoUnidad")
                        .HasConstraintName("FK_Articulos_Medidas");

                    b.HasOne("CingeRazor.Models.TipoArticulos", "TipoArticuloNavigation")
                        .WithMany("Articulos")
                        .HasForeignKey("TipoArticulo")
                        .HasConstraintName("FK_Articulos_TipoProductos");
                });

            modelBuilder.Entity("CingeRazor.Models.Clientes", b =>
                {
                    b.HasOne("CingeRazor.Models.Cedulas", "CódigoCédulaNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("CódigoCédula")
                        .HasConstraintName("FK_Clientes_Cedulas");

                    b.HasOne("CingeRazor.Models.Zonas", "CódigoZonaNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("CódigoZona")
                        .HasConstraintName("FK_Clientes_Zonas");
                });

            modelBuilder.Entity("CingeRazor.Models.Usuarios", b =>
                {
                    b.HasOne("CingeRazor.Models.Roles", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK_Usuarios_Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
